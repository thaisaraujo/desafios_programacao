#include<iostream>
#include<bits/stdc++.h>
#include<vector>
#include<math.h>
#include<stdbool.h>
using namespace std;

#define EPS 0.0001
# define M_PI           3.14159265358979323846  /* pi */


typedef struct {
    int x;
    int y;
} point;



bool inPolygon(point pt, const vector<point> &P){
    double sum = 0; //assumir que o primeiro vertice é igual ao último
    
    if(P.size() == 0){
        return false;
    }

    for(int i=0; i < P.size()-1; i++){
        if(ccw(pt, P[i], P[i+1]))
            sum += angle(P[i], pt, P[i+1]);
        else
            sum -= angle(P[i], pt, P[i+1])
    }

    return fabs(fabs(sum)-2*M_PI) < EPS;
}


int main() {
    int n, q, consultaX, consultaY;
    vector<point> P;
    point pt;
    bool res;

    cin >> n >> q;
    
    while((n*2)--){
        cin >> x >> y;
        P.push_back(point(x,y));
    }

    while(q--){
        cin >> consultaX >> consultaY;
        pt.x = consultaX;
        pt.y = consultaY;
        res = inPolygon(pt, P);
    }
    
   
   
    return 0;
}
